out_dir: results
metric_best: f1
wandb:
  use: False
  project: Pascal
dataset:
  format: PyG-VOCSuperpixels
  name: edge_wt_region_boundary
  slic_compactness: 30
  task: graph  # Even if VOC is node-level task, this needs to be set as 'graph'
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: VOCNode
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: VOCEdge
  edge_encoder_bn: False
posenc_Poly:
  enable: True
  add_full_edge_index: True
  method: mixed_bern
  power: 4
train:
  mode: custom
  batch_size: 32
  eval_period: 1
  ckpt_period: 100
  enable_ckpt: False  # Checkpointing can now be disabled to save I/O when e.g. just benchmarking.
  ckpt_best: False  # WARNING: Checkpoint every epoch a better model is found may increase I/O significantly.
model:
  type: GseModel
  loss_fun: weighted_cross_entropy
gse_model:
  enable: True
  hidden_dim: 96
  attn_heads: 8
  drop_prob: 0.0
  attn_drop_prob: 0.5
  residual: True
  layer_norm: False
  batch_norm: True
  bn_momentum: 0.1
  bn_no_runner: False
  rezero: False
  deg_scaler: True
  clamp: 5.0
  weight_fn: softmax
  agg: add
  act: relu
  messaging:
    layer_type: grit
    num_blocks: 0
    repeats: 0
  full:
    layer_type: grit
    enable: True
    repeats: 4
    input_norm: False
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_post_mp: 3
  dim_inner: 96  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 0.0
  base_lr: 0.0005
  max_epoch: 300
  scheduler: cosine_with_warmup
  num_warmup_epochs: 10
